version: "3"

env:
  # we need to set CGO_ENABLED=1 on non-darwin platforms to use -race flag
  CGO_ENABLED:
    sh: echo "{{ if eq OS "darwin" }}0{{ else }}1{{ end }}"

vars:
  BIN: "{{.ROOT_DIR}}/bin"

tasks:
  default:
    cmds:
      - task: lint
      - task: test

  lint:
    desc: Lint the code with golangci-lint
    sources:
      - "**/*.go"
      - .golangci.yml
    cmds:
      - golangci-lint run

  lint:fix:
    desc: Fix linting errors
    sources:
      - "**/*.go"
      - .golangci.yml
    cmds:
      - golangci-lint run --fix

  test:
    desc: Run test suite
    sources:
      - "**/*.go"
    cmds:
      - go test ./... {{.CLI_ARGS}}

  test:integration:
    desc: Run integration tests
    sources:
      - "**/*.go"
    cmds:
      - go test -tags=integration ./integration/... {{.CLI_ARGS}}

  test:e2e:
    desc: Run e2e tests
    sources:
      - "**/*.go"
    cmds:
      - go test -tags=e2e ./e2e/... {{.CLI_ARGS}}

  test:all:
    desc: Run all tests
    cmds:
      - task: test
      - task: test:integration
      - task: test:e2e

  mod:download:
    desc: Download dependencies
    sources:
      - go.mod
      - go.sum
    cmds:
      - go mod download

  mockery:install:
    desc: Install mockery
    vars:
      MOCKERY_VERSION: v2.32.4
    env:
      GOBIN: "{{.BIN}}"
    status:
      - go version -m {{.BIN}}/mockery | grep github.com/vektra/mockery | grep {{.MOCKERY_VERSION}}
    cmds:
      - go install github.com/vektra/mockery/v2@{{.MOCKERY_VERSION}}

  mockery:generate:
    desc: Generate mocks
    deps:
      - mockery:install
    cmds:
      - "{{.BIN}}/mockery"
    sources:
      - pkg/**/*.go
    generates:
      - mocks/**/*.go

  husky:pre-commit:
    cmds:
      - task: mockery:generate
      - task: lint
      - task: test
